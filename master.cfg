# -*- python -*-
# ex: set filetype=python:

##############################################
# The following environment variables are set by the Bolted Builtbot setup:
#
#  BBB_CONFIG_DIR:  Main configuration 
#
#  BBB_MASTER_PORT: Port on which the master will listen for the workers
#        the "port" is a strports specification string, defined in the
#        twisted.application.strports module 
#        (try pydoc twisted.application.strports to get documentation on the format).
#        This means that you can have the buildmaster listen on a localhost-only port by doing:
#
#            BBB_MASTER_PORT="tcp:10000:interface=127.0.0.1"
#
#  BBB_MASTER_UI_PORT: Web UI TCP port 
##########################################
import os
import sys

BBB_CONFIG_DIR = os.environ.get('BBB_CONFIG_DIR', None)
BBB_MASTER_PORT = os.environ.get('BBB_MASTER_PORT', 9989)
BBB_MASTER_UI_PORT = os.environ.get('BBB_MASTER_UI_PORT', 8081)

# append the config dir in the python path 
# if the environment variable is set, this will allow to have a
# more modular configuration
if BBB_CONFIG_DIR is not None:
    sys.path.append(BBB_CONFIG_DIR)

##################################
# Start of regular master config #
##################################
import myci
from buildbot.plugins import *


# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory.

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

####### WORKERS

# The 'workers' list defines the set of recognized workers. Each element is
# a Worker object, specifying a unique worker name and password.  The same
# worker name and password must be configured on the worker.
c['workers'] = myci.get_workers()

# 'protocols' contains information about protocols which master will use for
# communicating with workers. You must define at least 'port' option that workers
# could connect to your master with this protocol.
# 'port' must match the value configured into the workers (with their
# --master option)
c['protocols'] = {'pb': {'port': BBB_MASTER_PORT}}

####### CHANGESOURCES

# the 'change_source' setting tells the buildmaster how it should find out
# about source code changes.  Here we point to the buildbot version of a python hello-world project.

c['change_source'] = myci.get_change_source()


####### SCHEDULERS

# Configure the Schedulers, which decide how to react to incoming changes.  In this
# case, just kick off a 'runtests' build

c['schedulers'] = myci.get_schedulers()


####### BUILDERS

# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which workers can execute them.  Note that any particular build will
# only take place on one worker.

c['builders'] = myci.get_builders()


####### BUILDBOT SERVICES

# 'services' is a list of BuildbotService items like reporter targets. The
# status of each build will be pushed to these targets. buildbot/reporters/*.py
# has a variety to choose from, like IRC bots.

c['services'] = myci.get_services()

####### PROJECT IDENTITY

# the 'title' string will appear at the top of this buildbot installation's
# home pages (linked to the 'titleURL').

c['title'] = "Modular BBuildbot"
c['titleURL'] = "https://buildbot.github.io/hello-world/"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server is visible. This typically uses the port number set in
# the 'www' entry below, but with an externally-visible host name which the
# buildbot cannot figure out without some help.

c['buildbotURL'] = "http://localhost:8010/"

# minimalistic config to activate new web UI
c['www'] = dict(port=int(BBB_MASTER_UI_PORT),
                plugins=dict(waterfall_view={}, console_view={}, grid_view={}))

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}

# do not set network usage to upstream servers
c['buildbotNetUsageData'] = None
